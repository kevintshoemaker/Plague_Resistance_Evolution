###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
?extend
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
?clump
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
if(!is.null(parallelCluster)) {
parallel::stopCluster(parallelCluster)
parallelCluster <- c()
}
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
?subset
# time step is one year
# consider scalar demographic model for now, but with potential for matrix model
# 8/29/16: changed to consider a binary resistance trait that is potentially a function of several gene loci...
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
if(!is.null(cl)) {
parallel::stopCluster(cl)
cl <- c()
}
############
## CLEAR WORKSPACE
############
rm(list=ls())
############
## SIMULATION CONTROLS
############
NYEARS <- 10
############
## SET GLOBAL VARS
############
KEVIN_LAPTOP <- TRUE #  FALSE #
KEVIN_OFFICEPC <- FALSE # TRUE #
if(KEVIN_LAPTOP) GIT_DIR <- "C:\\Users\\Kevin\\GIT\\Plague_Resistance_Evolution"
if(KEVIN_OFFICEPC) GIT_DIR <- "E:\\GIT\\Plague_Resistance_Evolution"
#####################
# LOAD FUNCTIONS
#####################
setwd(GIT_DIR)
source("PlagueResistanceEvolution_FUNCTIONS.R")
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
dirs <- SetUpDirectories()
num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
############
## SAMPLE FROM LATIN HYPERCUBE
############
N_LHS_SAMPLES <- 4
masterDF <- MakeLHSSamples(nicheBreadthDir=dir,NicheBreadth)
###########
##  START A PARALLEL FOR LOOP
###########
cl <- makeCluster(num_cores,outfile="LOG.TXT")
registerDoParallel(cl=cl)    # make the cluster
#######################
## objects to export to each node in the cluster
# functionlist <- c()   # , 'mp.write'
# filelist <- c()  # 'masterDF', 'MP_DIRECTORY','template','GENTIME','humanArrival.df','EXE_DIRECTORY','DLL_FILENAME','dispersalFunc.df','DistClasses','NPOPS','DistBins',
#
# objectlist <- c(functionlist,filelist)   # full list of objects to export
#
#
# packagelist <- c("secr","igraph","raster")
allsamples <- foreach(i = 1: nrow(masterDF)
# .export=objectlist,
# .packages = packagelist,
# .errorhandling=c("pass")
) %dopar% {
# #####################
# # LOAD FUNCTIONS
# #####################
#
# setwd(GIT_DIR)
# source("PlagueResistanceEvolution_FUNCTIONS.R")
#
############
## SET UP WORKSPACE AND LOAD PACKAGES
############
#SetUpWorkspace()
#num_cores <- detectCores() - 1   # for setting up cluster... leave one core free for windows background processes?
temp <- MakeWorker(NYEARS, masterDF, dirs)(i)  #DoSimulateResistance(rep=i)    # simulate for these params...
}     ## end parallel for loop
#MakeWorker(NYEARS, masterDF, dirs)(1)
###################
# CLOSE CLUSTER
###################
if(!is.null(cl)) {
parallel::stopCluster(cl)
cl <- c()
}
warnings()
